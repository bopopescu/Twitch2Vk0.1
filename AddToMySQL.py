from SendMessageByVk import *
import mysql.connector
from info import *
import traceback

mydb = mysql.connector.connect(**config)
mycursor = mydb.cursor()
def getBruh(id):
    response = requests.get('https://api.vk.com/method/messages.getHistory',
                            params={
                                'peer_id': id,
                                'access_token': token,
                                'v': version,
                            }
                            )
    try:
        data = response.json()['response']['items']
        return data
    except:
        pass



def addToMySql_vkid_link(bruhId, link):
    mycursor = mydb.cursor()
    sql = "INSERT INTO users (VKID, TwitchUser, LetIndex) VALUES (%s, %s, %s)"
    val = (bruhId, link, link[19])
    mycursor.execute(sql, val)
    mydb.commit()
    if mycursor.rowcount == -1:
        sendMsg(bruhId, '–ù–µ—É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑–æ–∫')
    else:
        sendMsg(bruhId, 'üîë –°—Ç—Ä–∏–º–µ—Ä ' + TwitchName + ' –¥–æ–±–∞–≤–ª–µ–Ω –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö')
    print(mycursor.rowcount, "record inserted.")

def deleteFromMySql_vkid_link(bruhId, link):
    sql = "DELETE FROM users WHERE VKID = %s and TwitchUser= %s"
    val = (bruhId, link)
    mycursor.execute(sql, val)
    mydb.commit()
    if mycursor.rowcount == -1:
        sendMsg(bruhId, '–ù–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö')
    else:
        sendMsg(bruhId, 'üî• –°—Ç—Ä–∏–º–µ—Ä ' + TwitchName + ' —É–¥–∞–ª–µ–Ω –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö')
    print(mycursor.rowcount, "record deleted.")
def Error():
    sendMsg(id,'üëÄ –ê–¥–º–∏–Ω—ã –æ–ø–æ–≤–µ—â–µ–Ω—ã –∏ —Å–∫–æ—Ä–æ –≤–∞–º –æ—Ç–≤–µ—Ç—è—Ç...')
    sendMsg(Admin_id, '‚úè –ö—Ç–æ-—Ç–æ –Ω–∞–ø–∏—Å–∞–ª –≤ –≥—Ä—É–ø–ø—É:\nhttps://vk.com/gim{group_id}?sel={id}'.format(group_id=Group_id, id=id))
    sendMsg(335984154, '‚úè –ö—Ç–æ-—Ç–æ –Ω–∞–ø–∏—Å–∞–ª –≤ –≥—Ä—É–ø–ø—É:\nhttps://vk.com/gim{group_id}?sel={id}'.format(group_id=Group_id, id=id))
    sendMsg(538735097, '‚úè –ö—Ç–æ-—Ç–æ –Ω–∞–ø–∏—Å–∞–ª –≤ –≥—Ä—É–ø–ø—É:\nhttps://vk.com/gim{group_id}?sel={id}'.format(group_id=Group_id, id=id))



while True:    # LongPoll –ø–æ–ª—É—á–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ peer_id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    try:
        if mydb.is_connected() == False:
            sendMsg(id, 'problem mysql')
            try:
                mydb.ping(reconnect=True, attempts=3, delay=5)
            except mysql.connector.Error as err:
                mydb = mysql.connector.connect(**config)
                mycursor = mydb.cursor()
                mydb = mysql.connector.connect(**config)


        getServer = requests.get('https://api.vk.com/method/groups.getLongPollServer',   # –ü–æ–¥–∫–ª—é—á–∞–µ–º long poll –ø—Ä–æ–≤–µ—Ä–∫—É
                                 params={
                                     'group_id': Group_id,
                                     'access_token': token,
                                     'v': version
                                 }
                                 )
        var1 = getServer.json()['response']

        check = requests.get(    # –ü–æ–ª—É—á–∞–µ–º id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞–ø–∏—Å–∞–≤—à–µ–≥–æ –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (—Ç—É—Ç –º–æ–∂–Ω–æ –∏ —É–∑–Ω–∞—Ç—å —á—Ç–æ –æ–Ω –Ω–∞–ø–∏—Å–∞–ª, –Ω–æ —ç—Ç–æ –¥–æ–≤–æ–ª—å–Ω–æ —Å–ª–æ–∂–Ω–æ, –ø–æ—ç—Ç–æ–º—É —è –∏—Å–ø–æ–ª—å–∑—É—é –¥—Ä—É–≥–æ–π –º–µ—Ç–æ–¥)
            '{server}?act=a_check&key={key}&ts={ts}&wait=25&mode=2&version=2'.format(server=var1['server'], key=var1['key'],
                                                                                     ts=var1['ts'])).json()
        updates = check['updates']
        if updates:
            for element in updates:
                var1['ts'] = check['ts']
        el1 = str(updates).split(" ")
        try:
            id = (''.join(list(el1[13][:-1])))
        except:
            id = 1
            print("Waiting for message")
    except:
        print(token)
        print('problemVkConnection')
        pass

    while id != 1: # –í–ø–∏—Ö–∏–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö, —Å–µ–π—á–∞—Å –Ω—É–∂–Ω–æ –ø–æ–º–µ–Ω—è—Ç—å –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞–ª–∏—á–∏—è —Å—Å—ã–ª–∫–∏ –Ω–∞ —Ç–≤–∏—á –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ –±—ã –≤–ø–∏—Ö–∞—Ç—å
        try:
            workingLink = None
            LastUserMsg = getBruh(id)[0]['text']
            print("Message", LastUserMsg, 'from', id)

            if LastUserMsg == '–ú–∞–∫—Å, –≥–¥–µ –≤–∏–¥–æ—Å':
                sendMsg(id, '–ù–∞ –¥–Ω—è—Ö... ‚è±')
                id = 1

            if LastUserMsg.split(' ')[0].lower() == '–æ—Ç–ø–∏—Å–∫–∞':
                workingLink = 'https://twitch.tv/' + LastUserMsg.split(' ')[1]
                TwitchName = LastUserMsg.split(' ')[1].lower()
                deleteFromMySql_vkid_link(id, workingLink)
                id = 1
            elif LastUserMsg.lower() == '–æ—Ç–∫–ª—é—á–∏—Ç—å—Å—è –æ—Ç —Ä–∞—Å—Å—ã–ª–∫–∏':
                mycursor = mydb.cursor()
                deleteAll = 'DELETE FROM users WHERE VKID=%s' % id
                mycursor.execute(deleteAll)
                print(mycursor.rowcount, "record deleted.")
                sendMsg(id, 'üò• –í—ã –æ—Ç–ø–∏—Å–∞–ª–∏—Å—å –æ—Ç –≤—Å–µ—Ö —Ä–∞—Å—Å—ã–ª–æ–∫')
                mydb.commit()
                id = 1
            elif LastUserMsg.lower() == '–º–µ–Ω—é':
                sendMsg(id, '–í–≤–µ–¥–∏—Ç–µ –æ–¥–Ω—É –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö –∫–æ–º–∞–Ω–¥:\n\n\nüìÉ –ü–æ–¥–ø–∏—Å–∫–∞ *–Ω–∏–∫–Ω—ç–π–º —Å—Ç—Ä–∏–º–µ—Ä–∞*"\n\nüïØ –û—Ç–ø–∏—Å–∫–∞ *–Ω–∏–∫–Ω—ç–π–º —Å—Ç—Ä–∏–º–µ—Ä–∞*\n\nüëΩ –û—Ç–∫–ª—é—á–∏—Ç—å—Å—è –æ—Ç —Ä–∞—Å—Å—ã–ª–∫–∏\n\n‚ö° *—Å—Å—ã–ª–∫–∞*\n\n üê∂ –ú–∞–∫—Å, –≥–¥–µ –≤–∏–¥–æ—Å üê∂')
                id = 1
            elif LastUserMsg.split(' ')[0].lower() == '–ø–æ–¥–ø–∏—Å–∫–∞':
                workingLink = 'https://twitch.tv/' + LastUserMsg.split(' ')[1].lower()
                TwitchName = LastUserMsg.split(' ')[1].lower()
                print(workingLink)
                addToMySql_vkid_link(id, workingLink)
                mycursor = mydb.cursor()
                mydb.cursor().execute('INSERT INTO linksToSub (subLink) VALUES ("%s")' % workingLink)
                mydb.commit()
                id = 1

            else:

                LinkSeparated = LastUserMsg.split('/')

                for i in range(len(LinkSeparated)):

                    if LinkSeparated[i] == 'twitch.tv' or LinkSeparated[i] == 'www.twitch.tv' or LinkSeparated[i] == 'm.twitch.tv':
                        if i == 2:
                            workingLink = 'https://twitch.tv/' + LinkSeparated[i + 1].lower()
                            TwitchName = LinkSeparated[i + 1].lower()
                            try:
                                workingLink = workingLink.split('?')[0]
                                TwitchName = TwitchName.split('?')[0]
                            except:
                                pass
                            print(workingLink)
                            TwitchNameFL = tuple(LinkSeparated[i + 1][0])
                            addToMySql_vkid_link(id, workingLink)
                            mycursor = mydb.cursor()
                            mydb.cursor().execute('INSERT INTO linksToSub (subLink) VALUES ("%s")' % workingLink)
                            mydb.commit()
                            id = 1
                        else:
                            Error()
                            id = 1
                    elif len(LinkSeparated) - 1 == i and type(workingLink) != str:
                                Error()
                                id = 1


        except Exception:
            traceback.print_exc()
            Error()
            id = 1





